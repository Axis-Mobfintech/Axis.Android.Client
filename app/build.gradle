apply plugin: 'com.android.application'
apply plugin: 'com.google.protobuf'

android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    compileSdkVersion 30
    buildToolsVersion "30.0.1"
    compileOptions.encoding = 'windows-1251'

    defaultConfig {
        applicationId "br.com.setis.axisdemoapp"
        minSdkVersion 22
        targetSdkVersion 30
        versionCode 4
        versionName "0.0.9"
        project.version = android.defaultConfig.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    def libFileName = "AxisDemoApp-v${version}.apk"
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            applicationVariants.all {
                variant ->
                    variant.outputs.all { output ->
                        outputFileName = libFileName
                    }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/INDEX.LIST'
        exclude 'META-INF/io.netty.*'
        exclude 'META-INF/native-image/io.netty/transport/native-image.properties'
        exclude 'META-INF/native-image/io.netty/codec-http2/native-image.properties'
        exclude 'META-INF/native-image/io.netty/transport/reflection-config.json'
        exclude 'META-INF/native-image/io.netty/codec-http/native-image.properties'
        exclude 'META-INF/native-image/io.netty/buffer/native-image.properties'
        exclude 'META-INF/native-image/io.netty/handler/native-image.properties'
        exclude 'META-INF/native-image/io.netty/common/native-image.properties'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    def room_version = "2.2.5"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation fileTree(dir: "libs", include: ["*.aar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.2.41"
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "androidx.lifecycle:lifecycle-viewmodel:2.2.0"

    //implementation "io.grpc:grpc-netty:1.33.1"
    implementation 'io.grpc:grpc-netty-shaded:1.33.1'
    implementation "io.grpc:grpc-protobuf:1.33.1"
    implementation "io.grpc:grpc-stub:1.33.1"
    //implementation "io.grpc:grpc-alts:1.33.1"
    implementation 'org.apache.tomcat:annotations-api:6.0.53'
    implementation 'io.grpc:grpc-okhttp:1.34.1'
    implementation 'com.squareup.okhttp3:okhttp:3.0.1'

    implementation 'io.netty:netty-tcnative-boringssl-static:2.0.20.Final'
    //implementation 'io.netty:netty-tcnative-boringssl-static:1.1.33.Fork26'
}


protobuf {
    generatedFilesBaseDir = "$projectDir/src/main"

    protoc {
        artifact = "com.google.protobuf:protoc:3.12.4"
    }

    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.33.1"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java { option 'lite' }
            }
            task.plugins {
                grpc { // Options added to --grpc_out
                    option 'lite' }
            }
        }
    }
}