// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Protos/capk_table.proto

package com.axismobfintech.gpb.transactions;

public final class CapkTable {
  private CapkTable() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface CertificateAuthorityPublicKeyTableOrBuilder extends
      // @@protoc_insertion_point(interface_extends:axis.transactions.CertificateAuthorityPublicKeyTable)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     *Índice do registro na tabela (0001 - 9999)
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    int getIndex();

    /**
     * <pre>
     *Dados da CAPK
     *RID (Registered Identifier) e Índice da chave
     * </pre>
     *
     * <code>bytes registered_identifier = 2;</code>
     * @return The registeredIdentifier.
     */
    com.google.protobuf.ByteString getRegisteredIdentifier();

    /**
     * <pre>
     *CAPK Modulus - módulo da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_modulus = 3;</code>
     * @return The rsaKeyModulus.
     */
    com.google.protobuf.ByteString getRsaKeyModulus();

    /**
     * <pre>
     *CAPK Exponent - expoente público da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_exponent = 4;</code>
     * @return The rsaKeyExponent.
     */
    com.google.protobuf.ByteString getRsaKeyExponent();

    /**
     * <pre>
     *Checksum - SHA-1 dos valores acima (sem tags nem tamanhos)
     * </pre>
     *
     * <code>bytes checksum = 5;</code>
     * @return The checksum.
     */
    com.google.protobuf.ByteString getChecksum();
  }
  /**
   * Protobuf type {@code axis.transactions.CertificateAuthorityPublicKeyTable}
   */
  public  static final class CertificateAuthorityPublicKeyTable extends
      com.google.protobuf.GeneratedMessageLite<
          CertificateAuthorityPublicKeyTable, CertificateAuthorityPublicKeyTable.Builder> implements
      // @@protoc_insertion_point(message_implements:axis.transactions.CertificateAuthorityPublicKeyTable)
      CertificateAuthorityPublicKeyTableOrBuilder {
    private CertificateAuthorityPublicKeyTable() {
      registeredIdentifier_ = com.google.protobuf.ByteString.EMPTY;
      rsaKeyModulus_ = com.google.protobuf.ByteString.EMPTY;
      rsaKeyExponent_ = com.google.protobuf.ByteString.EMPTY;
      checksum_ = com.google.protobuf.ByteString.EMPTY;
    }
    public static final int INDEX_FIELD_NUMBER = 1;
    private int index_;
    /**
     * <pre>
     *Índice do registro na tabela (0001 - 9999)
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @return The index.
     */
    @java.lang.Override
    public int getIndex() {
      return index_;
    }
    /**
     * <pre>
     *Índice do registro na tabela (0001 - 9999)
     * </pre>
     *
     * <code>int32 index = 1;</code>
     * @param value The index to set.
     */
    private void setIndex(int value) {
      
      index_ = value;
    }
    /**
     * <pre>
     *Índice do registro na tabela (0001 - 9999)
     * </pre>
     *
     * <code>int32 index = 1;</code>
     */
    private void clearIndex() {
      
      index_ = 0;
    }

    public static final int REGISTERED_IDENTIFIER_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString registeredIdentifier_;
    /**
     * <pre>
     *Dados da CAPK
     *RID (Registered Identifier) e Índice da chave
     * </pre>
     *
     * <code>bytes registered_identifier = 2;</code>
     * @return The registeredIdentifier.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRegisteredIdentifier() {
      return registeredIdentifier_;
    }
    /**
     * <pre>
     *Dados da CAPK
     *RID (Registered Identifier) e Índice da chave
     * </pre>
     *
     * <code>bytes registered_identifier = 2;</code>
     * @param value The registeredIdentifier to set.
     */
    private void setRegisteredIdentifier(com.google.protobuf.ByteString value) {
      value.getClass();
  
      registeredIdentifier_ = value;
    }
    /**
     * <pre>
     *Dados da CAPK
     *RID (Registered Identifier) e Índice da chave
     * </pre>
     *
     * <code>bytes registered_identifier = 2;</code>
     */
    private void clearRegisteredIdentifier() {
      
      registeredIdentifier_ = getDefaultInstance().getRegisteredIdentifier();
    }

    public static final int RSA_KEY_MODULUS_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString rsaKeyModulus_;
    /**
     * <pre>
     *CAPK Modulus - módulo da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_modulus = 3;</code>
     * @return The rsaKeyModulus.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRsaKeyModulus() {
      return rsaKeyModulus_;
    }
    /**
     * <pre>
     *CAPK Modulus - módulo da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_modulus = 3;</code>
     * @param value The rsaKeyModulus to set.
     */
    private void setRsaKeyModulus(com.google.protobuf.ByteString value) {
      value.getClass();
  
      rsaKeyModulus_ = value;
    }
    /**
     * <pre>
     *CAPK Modulus - módulo da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_modulus = 3;</code>
     */
    private void clearRsaKeyModulus() {
      
      rsaKeyModulus_ = getDefaultInstance().getRsaKeyModulus();
    }

    public static final int RSA_KEY_EXPONENT_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString rsaKeyExponent_;
    /**
     * <pre>
     *CAPK Exponent - expoente público da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_exponent = 4;</code>
     * @return The rsaKeyExponent.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getRsaKeyExponent() {
      return rsaKeyExponent_;
    }
    /**
     * <pre>
     *CAPK Exponent - expoente público da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_exponent = 4;</code>
     * @param value The rsaKeyExponent to set.
     */
    private void setRsaKeyExponent(com.google.protobuf.ByteString value) {
      value.getClass();
  
      rsaKeyExponent_ = value;
    }
    /**
     * <pre>
     *CAPK Exponent - expoente público da chave RSA
     * </pre>
     *
     * <code>bytes rsa_key_exponent = 4;</code>
     */
    private void clearRsaKeyExponent() {
      
      rsaKeyExponent_ = getDefaultInstance().getRsaKeyExponent();
    }

    public static final int CHECKSUM_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString checksum_;
    /**
     * <pre>
     *Checksum - SHA-1 dos valores acima (sem tags nem tamanhos)
     * </pre>
     *
     * <code>bytes checksum = 5;</code>
     * @return The checksum.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getChecksum() {
      return checksum_;
    }
    /**
     * <pre>
     *Checksum - SHA-1 dos valores acima (sem tags nem tamanhos)
     * </pre>
     *
     * <code>bytes checksum = 5;</code>
     * @param value The checksum to set.
     */
    private void setChecksum(com.google.protobuf.ByteString value) {
      value.getClass();
  
      checksum_ = value;
    }
    /**
     * <pre>
     *Checksum - SHA-1 dos valores acima (sem tags nem tamanhos)
     * </pre>
     *
     * <code>bytes checksum = 5;</code>
     */
    private void clearChecksum() {
      
      checksum_ = getDefaultInstance().getChecksum();
    }

    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return (Builder) DEFAULT_INSTANCE.createBuilder();
    }
    public static Builder newBuilder(com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable prototype) {
      return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
    }

    /**
     * Protobuf type {@code axis.transactions.CertificateAuthorityPublicKeyTable}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable, Builder> implements
        // @@protoc_insertion_point(builder_implements:axis.transactions.CertificateAuthorityPublicKeyTable)
        com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTableOrBuilder {
      // Construct using com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       *Índice do registro na tabela (0001 - 9999)
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @return The index.
       */
      @java.lang.Override
      public int getIndex() {
        return instance.getIndex();
      }
      /**
       * <pre>
       *Índice do registro na tabela (0001 - 9999)
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @param value The index to set.
       * @return This builder for chaining.
       */
      public Builder setIndex(int value) {
        copyOnWrite();
        instance.setIndex(value);
        return this;
      }
      /**
       * <pre>
       *Índice do registro na tabela (0001 - 9999)
       * </pre>
       *
       * <code>int32 index = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearIndex() {
        copyOnWrite();
        instance.clearIndex();
        return this;
      }

      /**
       * <pre>
       *Dados da CAPK
       *RID (Registered Identifier) e Índice da chave
       * </pre>
       *
       * <code>bytes registered_identifier = 2;</code>
       * @return The registeredIdentifier.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRegisteredIdentifier() {
        return instance.getRegisteredIdentifier();
      }
      /**
       * <pre>
       *Dados da CAPK
       *RID (Registered Identifier) e Índice da chave
       * </pre>
       *
       * <code>bytes registered_identifier = 2;</code>
       * @param value The registeredIdentifier to set.
       * @return This builder for chaining.
       */
      public Builder setRegisteredIdentifier(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRegisteredIdentifier(value);
        return this;
      }
      /**
       * <pre>
       *Dados da CAPK
       *RID (Registered Identifier) e Índice da chave
       * </pre>
       *
       * <code>bytes registered_identifier = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearRegisteredIdentifier() {
        copyOnWrite();
        instance.clearRegisteredIdentifier();
        return this;
      }

      /**
       * <pre>
       *CAPK Modulus - módulo da chave RSA
       * </pre>
       *
       * <code>bytes rsa_key_modulus = 3;</code>
       * @return The rsaKeyModulus.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRsaKeyModulus() {
        return instance.getRsaKeyModulus();
      }
      /**
       * <pre>
       *CAPK Modulus - módulo da chave RSA
       * </pre>
       *
       * <code>bytes rsa_key_modulus = 3;</code>
       * @param value The rsaKeyModulus to set.
       * @return This builder for chaining.
       */
      public Builder setRsaKeyModulus(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRsaKeyModulus(value);
        return this;
      }
      /**
       * <pre>
       *CAPK Modulus - módulo da chave RSA
       * </pre>
       *
       * <code>bytes rsa_key_modulus = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearRsaKeyModulus() {
        copyOnWrite();
        instance.clearRsaKeyModulus();
        return this;
      }

      /**
       * <pre>
       *CAPK Exponent - expoente público da chave RSA
       * </pre>
       *
       * <code>bytes rsa_key_exponent = 4;</code>
       * @return The rsaKeyExponent.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getRsaKeyExponent() {
        return instance.getRsaKeyExponent();
      }
      /**
       * <pre>
       *CAPK Exponent - expoente público da chave RSA
       * </pre>
       *
       * <code>bytes rsa_key_exponent = 4;</code>
       * @param value The rsaKeyExponent to set.
       * @return This builder for chaining.
       */
      public Builder setRsaKeyExponent(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setRsaKeyExponent(value);
        return this;
      }
      /**
       * <pre>
       *CAPK Exponent - expoente público da chave RSA
       * </pre>
       *
       * <code>bytes rsa_key_exponent = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearRsaKeyExponent() {
        copyOnWrite();
        instance.clearRsaKeyExponent();
        return this;
      }

      /**
       * <pre>
       *Checksum - SHA-1 dos valores acima (sem tags nem tamanhos)
       * </pre>
       *
       * <code>bytes checksum = 5;</code>
       * @return The checksum.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getChecksum() {
        return instance.getChecksum();
      }
      /**
       * <pre>
       *Checksum - SHA-1 dos valores acima (sem tags nem tamanhos)
       * </pre>
       *
       * <code>bytes checksum = 5;</code>
       * @param value The checksum to set.
       * @return This builder for chaining.
       */
      public Builder setChecksum(com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setChecksum(value);
        return this;
      }
      /**
       * <pre>
       *Checksum - SHA-1 dos valores acima (sem tags nem tamanhos)
       * </pre>
       *
       * <code>bytes checksum = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearChecksum() {
        copyOnWrite();
        instance.clearChecksum();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:axis.transactions.CertificateAuthorityPublicKeyTable)
    }
    @java.lang.Override
    @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
    protected final java.lang.Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        java.lang.Object arg0, java.lang.Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable();
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case BUILD_MESSAGE_INFO: {
            java.lang.Object[] objects = new java.lang.Object[] {
              "index_",
              "registeredIdentifier_",
              "rsaKeyModulus_",
              "rsaKeyExponent_",
              "checksum_",
            };
            java.lang.String info =
                "\u0000\u0005\u0000\u0000\u0001\u0005\u0005\u0000\u0000\u0000\u0001\u0004\u0002\n" +
                "\u0003\n\u0004\n\u0005\n";
            return newMessageInfo(DEFAULT_INSTANCE, info, objects);
        }
        // fall through
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          com.google.protobuf.Parser<com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable> parser = PARSER;
          if (parser == null) {
            synchronized (com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable.class) {
              parser = PARSER;
              if (parser == null) {
                parser =
                    new DefaultInstanceBasedParser<com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable>(
                        DEFAULT_INSTANCE);
                PARSER = parser;
              }
            }
          }
          return parser;
      }
      case GET_MEMOIZED_IS_INITIALIZED: {
        return (byte) 1;
      }
      case SET_MEMOIZED_IS_INITIALIZED: {
        return null;
      }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:axis.transactions.CertificateAuthorityPublicKeyTable)
    private static final com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable DEFAULT_INSTANCE;
    static {
      CertificateAuthorityPublicKeyTable defaultInstance = new CertificateAuthorityPublicKeyTable();
      // New instances are implicitly immutable so no need to make
      // immutable.
      DEFAULT_INSTANCE = defaultInstance;
      com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
        CertificateAuthorityPublicKeyTable.class, defaultInstance);
    }

    public static com.axismobfintech.gpb.transactions.CapkTable.CertificateAuthorityPublicKeyTable getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<CertificateAuthorityPublicKeyTable> PARSER;

    public static com.google.protobuf.Parser<CertificateAuthorityPublicKeyTable> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
